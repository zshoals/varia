



struct World
{
	EntityManifest (list of all enabled/disabled entities, tracks global generation count for each)
	Active entities count (probably should be in entity manifest lol)

	Important: Component array bitsets (indicates whether this component array contains this entity)
	Important: Tag array bitsets (same as components but with no associated data)
	
	Actual component data (positions, rotations, abilities, etc..."hard" data here)
}


naive entity removal - simply iterate over all component bitsets and remove the entity from all of them
	and update entity manifest (increment generation count)


Components are pretty big; several MB each, maybe really bad in the worst case (20mb?)

//Hits L2 cache + main memory, repeatedly, just to remove entities
0.01mb -> bitset
5mb -> data
0.01mb -> bitset
10mb
0.01mb -> bitset
2mb
0.01mb -> bitset
1mb
0.01mb -> bitset
6mb
0.01mb -> bitset
1mb
0.01mb -> bitset




//Basically everything's in the L1 cache
0.01mb -> bitset
0.01mb -> bitset
0.01mb -> bitset
0.01mb -> bitset
0.01mb -> bitset
0.01mb -> bitset
0.01mb -> bitset
0.01mb -> bitset
0.01mb -> bitset
0.01mb -> bitset
0.01mb -> bitset
0.01mb -> bitset
0.01mb -> bitset
0.01mb -> bitset
0.01mb -> bitset
0.01mb -> bitset
0.01mb -> bitset

Complete cache clusterfuck